using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraBars;
using Enterprise.Domain.Financeiro;
using Enterprise.Application.Contract.Financeiro;
using Enterprise.Framework.Enuns.Genericos;

namespace Enterprise.Presentation.Desktop.Separadores.Financeiro
{
    public partial class frmCadastroBanco : DevExpress.XtraBars.Ribbon.RibbonForm
    {

        public Banco Banco { get; set; }
        public List<Banco> Bancos { get; set; }
        public int Index { get; set; }
        public CadastrarOuEditar TipoOperacao { get; private set; }

        private readonly IBancosApp App;

        public frmCadastroBanco(IBancosApp app)
        {
            InitializeComponent();
            App = app;
        }
        private void carregarDados()
        {
            Bancos = App.Listar(null);
            Index = 0;
        }


        private void btnVoltar_ItemClick(object sender, ItemClickEventArgs e)
        {
            Close();
        }


        public Banco GetBanco()
        {
            buttonSelecionar.Visibility = BarItemVisibility.Always;
            ShowDialog();
            if (Banco != (null) && Banco.codigo > 0)
            {
                return Banco;
            }

            return new Banco() { descricao = "Nenhuma" };
        }

        private void frmBancos_Load(object sender, System.EventArgs e)
        {
            carregarDados();
            gridControl1.DataSource = Bancos;

        }

        private void buttonSelecionar_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Index < 0) return;

            Banco = Bancos[Index];
            Close();
        }

        private void gridView1_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            Index = e.RowHandle;
            Banco = Bancos[Index];
            txtDescricao.Text = Banco.descricao;
        }

        private void btnNovo_ItemClick(object sender, ItemClickEventArgs e)
        {
            Banco = new Banco();
            txtDescricao.Enabled = true;
            txtDescricao.Text = string.Empty;
            btnGravar.Enabled = true;
            btnNovo.Enabled = false;
            btnEditar.Enabled = false;
            TipoOperacao = CadastrarOuEditar.Cadastro;

        }
        private void btnEditar_ItemClick(object sender, ItemClickEventArgs e)
        {
            //Habilitacao = new Habilitacao();
            txtDescricao.Enabled = true;
            //txtDescricao.Text = string.Empty;
            btnGravar.Enabled = true;
            btnEditar.Enabled = false;
            btnNovo.Enabled = false;
            TipoOperacao = CadastrarOuEditar.Edição;
        }

        private void btnGravar_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (txtDescricao.Text.Equals(string.Empty))
            {
                MessageBox.Show("Preencha o campo Descrição!");
                return;
            }

            Banco = new Banco()
            {
                codigo = Banco.codigo,
                descricao = txtDescricao.Text
            };
            if (TipoOperacao == CadastrarOuEditar.Cadastro)
            {
                App.addBanco(Banco);
            }
            else
            {
<<<<<<< HEAD
                App.updateBanco(Banco,null);
=======
                App.update(Banco);
>>>>>>> a51539a432b468135e938d14310715e15669d35c
            }
            frmBancos_Load(sender, e);
            Banco = new Banco();
            txtDescricao.Enabled = false;
            txtDescricao.Text = string.Empty;
            btnGravar.Enabled = false;
            btnNovo.Enabled = true;
            btnEditar.Enabled = true;
        }

        private void btnEliminar_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Index < 0)
            {
                MessageBox.Show("Selecione um registro!");
                return;
            }
            if (temCertesa())
            {
                App.deleteBanco(Banco);
                MessageBox.Show("Registro Eliminado com sucesso!");
                frmBancos_Load(sender, e);
            }
        }

        private bool temCertesa()
        {
            var result = MessageBox.Show(
                "Tem certesa que pretende" +
                " eleminar Este registro?",
                "QUSETÃO",
                MessageBoxButtons.YesNo,
                MessageBoxIcon.Question
            );
            return result == DialogResult.Yes;
        }
    }
}